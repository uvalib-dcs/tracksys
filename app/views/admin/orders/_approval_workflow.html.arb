if order.order_status == 'requested'
   if order.customer.external?
      if order.fee_estimated.nil?
         # External customers (who require a fee estaimte) for which there IS NO estimated fee
         div :class => 'workflow_button' do
            button_to "Approve Order", approve_order_admin_order_path(order.id), :disabled => true, :method => :put
         end
         div :class => 'workflow_button' do
            button_to "Cancel Order", cancel_order_admin_order_path(order.id), :method => :put
         end
         div :class => 'workflow_button' do
            button_to "Send Fee Estimate", send_fee_estimate_to_customer_admin_order_path(order.id), :disabled => true, :method => :put
         end
         div do
            "Either enter an estimated fee or cancel this order."
         end
      elsif order.fee_estimated
         if order.fee_actual.nil?
            # External customers (who require a fee estaimte) for which there IS estimated fee but actual fee is blank.
            # Actions available: Cancel or Send Fee Estimate
            div :class => 'workflow_button' do
               button_to "Approve Order", approve_order_admin_order_path(order.id), :disabled => true, :method => :put
            end
            div :class => 'workflow_button' do
               button_to "Cancel Order", cancel_order_admin_order_path(order.id), :method => :put
            end
            div :class => 'workflow_button' do
               button_to "Send Fee Estimate", send_fee_estimate_to_customer_admin_order_path(order.id), :method => :put
            end
            div do
               "Either send fee estimate or cancel this order."
            end
         else
            # External customers (who require a fee) for which there IS both an estimated fee and actual fee
            # Actions available: Approve or Cancel
            if order.has_units_being_prepared.any?
               div :class => 'workflow_button' do
                  button_to "Approve Order", approve_order_admin_order_path(order.id), :disabled => true, :method => :put
               end
               div do
                  "You must approve or cancel this order's units before approving."
               end
            else
               div :class => 'workflow_button' do
                  button_to "Approve Order", approve_order_admin_order_path(order.id), :method => :put
               end
            end
            div :class => 'workflow_button' do
               button_to "Cancel Order", cancel_order_admin_order_path(order.id), :method => :put
            end
            div :class => 'workflow_button' do
               button_to "Send Fee Estimate", send_fee_estimate_to_customer_admin_order_path(order.id), :disabled => true, :method => :put
            end
            div do
               "Either approve or cancel this order."
            end
         end
      end
   else
      # Internal customers require no fee.
      if order.has_units_being_prepared.any?
         div :class => 'workflow_button' do
            button_to "Approve Order", approve_order_admin_order_path(order.id), :disabled => true, :method => :put
         end
         div do
            "You must approve or cancel this order's units before approving."
         end
      else
         div :class => 'workflow_button' do
            button_to "Approve Order", approve_order_admin_order_path(order.id), :method => :put
         end
      end
      div :class => 'workflow_button' do
         button_to "Cancel Order", cancel_order_admin_order_path(order.id), :method => :put
      end
      div :class => 'workflow_button' do
         button_to "Send Fee Estimate", send_fee_estimate_to_customer_admin_order_path(order.id), :method => :put, :disabled => true
      end
      div do
         "#{order.customer.full_name} is internal to UVA and requires no fee approval"
      end
   end
elsif order.order_status == 'deferred'
   if order.customer.external?
      if order.fee_actual.nil?
         div :class => 'workflow_button' do
            button_to "Customer Accepts Fee", approve_order_admin_order_path(order.id), :disabled => true, :method => :put
         end
         div :class => 'workflow_button' do
            button_to "Customer Declines Fee", cancel_order_admin_order_path(order.id), :method => :put
         end
         div do
            "Please input the actual fee before approving order."
         end
      else
         div :class => 'workflow_button' do
            button_to "Customer Accepts Fee", approve_order_admin_order_path(order.id), :method => :put
         end
         div :class => 'workflow_button' do
            button_to "Customer Declines Fee", cancel_order_admin_order_path(order.id), :method => :put
         end
      end
   end
elsif order.order_status == 'approved' || order.order_status == 'canceled'
   div :class => 'workflow_button' do
      button_to "Approve Order", approve_order_admin_order_path(order.id), :disabled => true, :method => :put
   end
   div :class => 'workflow_button' do
      button_to "Cancel Order", cancel_order_admin_order_path(order.id), :disabled => true, :method => :put
   end
   div :class => 'workflow_button' do
      button_to "Send Fee Estimate", send_fee_estimate_to_customer_admin_order_path(order.id), :method => :put,  :disabled => true
   end
   div do
      "No options available.  Order is #{order.order_status}."
   end
end
