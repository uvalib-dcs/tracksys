div id: "masterfile-list" do
   page_size = params[:page_size]
   page_size = 15 if page_size.nil?

   div id: "working-message" do
      span "Master file update in progress..."
      div id: "work-spinner" do end
   end

   div class: "unit-mf-action-panel" do
      all_btn = "<a href='/admin/units/#{unit.id}?page_size=#{unit.master_files.size}' class='mf-action-button'>View All</a>"
      all_btn = "" if page_size.to_i >= unit.master_files.count

      replace_btn = ""
      add_btn = ""
      del_btn = ""
      if !unit.reorder
         replace_btn = "<span id='replace-pages' class='mf-action-button'>Replace</span>"
         del_btn = "<span id='del-pages' class='mf-action-button disabled'>Delete Selected</span>" if !unit.in_dl?
         add_btn = "<span id='add-pages' class='mf-action-button'>Add</span>"
      end

      if !unit.metadata.nil? && !unit.date_archived.blank?
         token =  Time.now.to_i
         url = "#{Settings.pdf_url}/#{unit.metadata.pid}?unit=#{unit.id}&token=#{token}"
         pdf_btn = "<a id='download-select-pdf' href='#{url}' target='_blank' class='mf-action-button disabled'>Download Selection as PDF</a>"
      end

      raw("#{all_btn}#{pdf_btn}<span id='updates'>#{add_btn}#{replace_btn}#{del_btn}</span>")
   end
   div class: "update-confirm" do
      span id: "confirm-msg" do "replace master fiiles?" end
      div class: "button-bar" do
         raw("<span id='cancel-update' class='mf-action-button'>Cancel</span><span id='confirm-update' class='mf-action-button'>OK</span>")
      end
   end

   paginated_collection(unit.master_files.page(params[:page]).per(page_size.to_i), download_links: false) do
      table_for collection do |mf|
         if !unit.metadata.nil? && !unit.date_archived.blank?
            column ('') do |mf|
               raw("<input type='checkbox' class='mf-checkbox' data-mf-id='#{mf.id}'/>") if !mf.deaccessioned?
            end
         end
         column :filename, :sortable => false
         column :title do |mf|
           mf.title.truncate( 20 ) if !mf.title.nil?
         end
         column :description do |mf|
           mf.description.truncate( 20 ) if !mf.description.nil?
         end
         column :date_archived do |mf|
           format_date(mf.date_archived)
         end
         column :date_dl_ingest do |mf|
           format_date(mf.date_dl_ingest)
         end
         column :pid, :sortable => false
         column("Thumbnail") do |mf|
            if mf.deaccessioned?
               span class: "deaccessioned" do "Deaccessioned" end
            else
               link_to image_tag(mf.link_to_image(:small)), "#{mf.link_to_image(:large)}",
                  :rel => 'colorbox', :title => "#{mf.filename} (#{mf.title} #{mf.description})"
            end
         end
         column("") do |mf|
           div do
             link_to "Details", admin_master_file_path(mf), :class => "member_link view_link"
           end
           if !mf.metadata.nil? && !mf.unit.date_archived.blank? && !mf.deaccessioned?
              div do
                 link_to "PDF", "#{Settings.pdf_url}/#{mf.pid}", target: "_blank"
              end
           end
           if !current_user.viewer? && !mf.deaccessioned?
              div do
                link_to I18n.t('active_admin.edit'), edit_admin_master_file_path(mf), :class => "member_link edit_link"
              end
              if ocr_enabled?
                div do
                    link_to "OCR", "/admin/ocr?mf=#{mf.id}"
                end
              end
           end
           if mf.date_archived && !mf.deaccessioned?
             div do
               link_to "Download", download_from_archive_admin_master_file_path(mf.id), :method => :get
             end
           end
         end
      end
   end
   div :style=>'clear:both' do end
end
